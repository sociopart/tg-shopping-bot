#require 'google_drive'
require_relative '../engine'
require_relative 'constants'

#session = GoogleDrive::Session.from_service_account_key("../gapi_secret.json")
#spreadsheet = session.spreadsheet_by_title('–ü—Ä–∞–π—Å-–ª–∏—Å—Ç "Sneaker Club"')
# ==============================================================================
# route: /start
def msg_start(bot, message, params)
  if BotEngine.user_subscribed?(bot, "-1001707061142", message.from.id)
    cb_menu(bot, message, params)
  else
    cb_menu_unlogged(bot, message, params)
  end
end
# ==============================================================================
# route: /cb/menu_unlogged
def cb_menu_unlogged(bot, message, params)
  text = %{
          –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, #{message.from.first_name}!%nl%
          %nl%
          –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞
          –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.%nl%
          –ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞–∂–º–∏—Ç–µ <b>¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª</b>.
        }.gsub(/\s+/, " ").gsub("%nl% ", "\n").strip

  kb = [
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∫–∞–Ω–∞–ª', url: BotEngine::Constants::CHANNEL_URL)
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: '‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data: 'check_subscription')
    ]
  ]

  markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: kb)
  bot.api.send_message(chat_id: message.chat.id, text: text, 
                       reply_markup: markup, parse_mode: "html")
end
# ==============================================================================
# route: /cb/menu
def cb_menu(bot, message, params)
  text = %{
    –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, #{message.from.first_name}!%nl%
    %nl%
    –ë–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∫—Ä–æ—Å—Å–æ–≤–æ–∫ –º–∞–≥–∞–∑–∏–Ω–∞ 
    <a href="tg://join?invite=ZuGFlFXtVcwwMTMy">Skidrow</a>. 
    –ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <b>¬´–ö–∞—Ç–∞–ª–æ–≥¬ª</b>, 
    –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –º–æ–¥–µ–ª—å –∫—Ä–æ—Å—Å–æ–≤–æ–∫ –∏ —É–∫–∞–∂–∏—Ç–µ 
    –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è 
    –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.%nl%
    %nl%
    –ü–æ –∑–∞–∫–∞–∑—É –∏ –≤–æ–ø—Ä–æ—Å–∞–º, –ø–∏—à–∏—Ç–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ø–æ –∫–Ω–æ–ø–∫–µ <b>¬´–ü–æ–¥–¥–µ—Ä–∂–∫–∞¬ª</b>.
  }.gsub(/\s+/, " ").gsub("%nl% ", "\n").strip

  kb = [
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üõí –ö–∞—Ç–∞–ª–æ–≥', callback_data: '/cb/menu/catalog'),
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üîé –ü–æ–∏—Å–∫', callback_data: '/cb/menu/search')
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üí¨ –û—Ç–∑—ã–≤—ã', url: BotEngine::Constants::CHANNEL_URL),
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üõé –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url: BotEngine::Constants::CHANNEL_URL)
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üëü –ú–æ–∏ –∑–∞–∫–∞–∑—ã', callback_data: '/cb/menu/orders')
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üõç –ö–æ—Ä–∑–∏–Ω–∞', callback_data: '/cb/menu/cart')
    ]
  ]

  markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: kb)
  bot.api.send(:send_message, chat_id: message.from.id, text: text, 
                reply_markup: markup, parse_mode: "html")
end
# ==============================================================================
# route: /cb/menu/orders
def cb_menu_orders(bot, message, params)
  cb_chat_id = message.message.chat.id
  cb_msg_id  = message.message.message_id

  text = "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã."
  kb = [
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: '/cb/menu')
    ]
  ]
  markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: kb)
  bot.api.send(:edit_message_text, chat_id: cb_chat_id, message_id: cb_msg_id, 
               text: text, reply_markup: markup, parse_mode: "html")
end
# ==============================================================================
# route: /cb/menu/catalog
def cb_menu_catalog(bot, message, params)
  cb_chat_id = message.message.chat.id
  cb_msg_id  = message.message.message_id

  text = "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã."
  kb = [
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üëü –í—Å–µ –±—Ä–µ–Ω–¥—ã', callback_data: '/cb/catalog_info?all_brends')
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üî• –ù–æ–≤–∏–Ω–∫–∏', callback_data: '/cb/catalog_info?new_ones&sales')
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üìâ –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏', callback_data: '/cb/catalog_info?sales')
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: 'üîé –ü–æ–∏—Å–∫', callback_data: '/cb/menu/search')
    ],
    [
      Telegram::Bot::Types::InlineKeyboardButton.new(
        text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: '/cb/menu')
    ]
  ]
  markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: kb)
  bot.api.send(:edit_message_text, chat_id: cb_chat_id, message_id: cb_msg_id, 
               text: text, reply_markup: markup, parse_mode: "html")
end
# ==============================================================================
# route: /cb/catalog_info?(all_brends|new_ones|sales)
def cb_catalog_info(bot, message, params)
  worksheet = spreadsheet.worksheets.first
  worksheet.rows.first(10).each { |row| puts row.first(6)}
end
# ==============================================================================
# route: /cb/menu/search
def cb_menu_search(bot, message, params)
end
# ==============================================================================
# route: /cb/menu/cart
def cb_menu_cart(bot, message, params)
end